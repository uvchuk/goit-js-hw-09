{"mappings":"YAAA,IAAMA,EAAO,CACXC,QAASC,SAASC,cAAc,uBAChCC,OAAQF,SAASC,cAAc,sBAC/BE,SAAUH,SAASC,cAAc,wBACjCG,UAAWJ,SAASC,cAAc,0BAGpCH,EAAKM,UAAUC,iBAAiB,SAIhC,SAAkBC,GAChBA,EAAIC,iBACJC,EAAeV,EAAKC,QAAQU,MAC5BX,EAAKM,UAAUM,UAAW,EAC1BC,WAAWC,EAAaJ,E,IAP1B,IAAIK,EAAW,EACXL,EAAe,EASnB,SAASI,IACP,IAAME,EAAchB,EAAKI,OAAOO,MAC1BM,EAAgBjB,EAAKK,SAASM,MAChCO,GAAgBR,EACdS,EAAUC,aAAY,WAmB9B,IAAuBC,EAAUC,EACzBC,GAnBJR,GAAY,IACIE,IAiBGI,EAhBHN,EAgBaO,EAhBHJ,EAiBtBK,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EAEFI,EAAQ,CACNE,SAAAR,EACAC,UAIFM,EAAO,CACLC,SAAAR,EACAC,S,KA5BCQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUP,EAAKS,EAALT,MACjBW,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANb,EAAM,O,IAE3Dc,OAAM,SAAAL,G,IAAGM,EAAQN,EAARF,SAAUP,EAAKS,EAALT,MAClBW,QAAQC,IAAI,sBAAqCC,OAAfE,EAAS,QAAYF,OAANb,EAAM,O,IAE3DJ,IAAiBF,IAEjBsB,cAAcnB,GACdJ,EAAW,EACXf,EAAKM,UAAUM,UAAW,E,GAE3BI,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayIn: document.querySelector('input[name=\"delay\"]'),\n  stepIn: document.querySelector('input[name=\"step\"]'),\n  amountIn: document.querySelector('input[name=\"amount\"]'),\n  createBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.createBtn.addEventListener('click', onSubmit);\nlet position = 0;\nlet delayInValue = 0;\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  delayInValue = refs.delayIn.value;\n  refs.createBtn.disabled = true;\n  setTimeout(showPromise, delayInValue);\n}\n\nfunction showPromise() {\n  const stepInValue = refs.stepIn.value;\n  const amountInValue = refs.amountIn.value;\n  let summaryDelay = +delayInValue;\n  const promise = setInterval(() => {\n    position += 1;\n    if (position <= amountInValue) {\n      createPromise(position, summaryDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n        });\n      summaryDelay += +stepInValue;\n    } else {\n      clearInterval(promise);\n      position = 0;\n      refs.createBtn.disabled = false;\n    }\n  }, stepInValue);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({\n        position,\n        delay,\n      });\n    } else {\n      // Reject\n      reject({\n        position,\n        delay,\n      });\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","delayIn","document","querySelector","stepIn","amountIn","createBtn","addEventListener","evt","preventDefault","$ce04d3a99e08e73b$var$delayInValue","value","disabled","setTimeout","$ce04d3a99e08e73b$var$showPromise","$ce04d3a99e08e73b$var$position","stepInValue","amountInValue","summaryDelay","promise","setInterval","position3","delay","shouldResolve","Math","random","Promise","resolve","reject","position","then","param","position1","console","log","concat","catch","position2","clearInterval"],"version":3,"file":"03-promises.418b4f40.js.map"}