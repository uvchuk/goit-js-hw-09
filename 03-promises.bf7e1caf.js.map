{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,uBAChCC,OAAQF,SAASC,cAAc,sBAC/BE,SAAUH,SAASC,cAAc,wBACjCG,UAAWJ,SAASC,cAAc,0BAGpCH,EAAKM,UAAUC,iBAAiB,SAIhC,SAAkBC,GAChBA,EAAIC,iBACJC,EAAeV,EAAKC,QAAQU,MAC5BX,EAAKM,UAAUM,UAAW,EAC1BC,WAAWC,EAAaJ,E,IAP1B,IAAIK,EAAW,EACXL,EAAe,EASnB,SAASI,IACP,MAAME,EAAchB,EAAKI,OAAOO,MAC1BM,EAAgBjB,EAAKK,SAASM,MACpC,IAAIO,GAAgBR,EACpB,MAAMS,EAAUC,aAAY,KAC1BL,GAAY,EACRA,GAAYE,GAiBpB,SAAuBI,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EAEFI,EAAQ,CACNE,SAAAR,E,MACAC,IAIFM,EAAO,CACLC,SAAAR,E,MACAC,GACA,G,CA9BFQ,CAAcf,EAAUG,GACrBa,MAAK,EAAGF,SAAAG,EAAQV,MAAEA,MACjBxB,EAAAmC,OAAOC,QAAQ,uBAAqBF,QAAiBV,OAAW,IAEjEa,OAAM,EAAGN,SAAAO,EAAQd,MAAEA,MAClBxB,EAAAmC,OAAOI,QAAQ,sBAAoBD,QAAed,OAAW,IAEjEJ,IAAiBF,IAEjBsB,cAAcnB,GACdJ,EAAW,EACXf,EAAKM,UAAUM,UAAW,E,GAE3BI,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  delayIn: document.querySelector('input[name=\"delay\"]'),\n  stepIn: document.querySelector('input[name=\"step\"]'),\n  amountIn: document.querySelector('input[name=\"amount\"]'),\n  createBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.createBtn.addEventListener('click', onSubmit);\nlet position = 0;\nlet delayInValue = 0;\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  delayInValue = refs.delayIn.value;\n  refs.createBtn.disabled = true;\n  setTimeout(showPromise, delayInValue);\n}\n\nfunction showPromise() {\n  const stepInValue = refs.stepIn.value;\n  const amountInValue = refs.amountIn.value;\n  let summaryDelay = +delayInValue;\n  const promise = setInterval(() => {\n    position += 1;\n    if (position <= amountInValue) {\n      createPromise(position, summaryDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n        });\n      summaryDelay += +stepInValue;\n    } else {\n      clearInterval(promise);\n      position = 0;\n      refs.createBtn.disabled = false;\n    }\n  }, stepInValue);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({\n        position,\n        delay,\n      });\n    } else {\n      // Reject\n      reject({\n        position,\n        delay,\n      });\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delayIn","document","querySelector","stepIn","amountIn","createBtn","addEventListener","evt","preventDefault","$47d4ff9957288465$var$delayInValue","value","disabled","setTimeout","$47d4ff9957288465$var$showPromise","$47d4ff9957288465$var$position","stepInValue","amountInValue","summaryDelay","promise","setInterval","position3","delay","shouldResolve","Math","random","Promise","resolve","reject","position","$47d4ff9957288465$var$createPromise","then","position1","Notify","success","catch","position2","failure","clearInterval"],"version":3,"file":"03-promises.bf7e1caf.js.map"}